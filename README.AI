# README.AI는 코파일럿이 할 작업 목록 및 AI 메모장입니다.
- README.AI, api.txt가 중요한 설명서입니다.
- AI는 언제든 이 문서를 수정할 수 있습니다.

# 백엔드 구현 작업 목록

## AI 작업 지침
- 사용자 요청: 인증/보안 기능 최소화 (이유: 현재 학습 및 기능 구현에 집중하기 위함. 실제 프로덕션 환경에서는 보안이 매우 중요하지만, 현 단계에서는 핵심 로직 이해와 빠른 프로토타이핑을 우선으로 함. 추후 보안 강화 예정).
- 사용자 요청: README.AI 작업 목록 순서대로 진행.
- 사용자 요청: 프론트엔드 작업은 제외.

## 핵심 채팅 기능
- [x] **채팅 메시지 전송 API 구현 (`POST /api/chat/sessions/:session_id/messages`)**
    - [x] 사용자 메시지 수신 및 기본 유효성 검사 (내용 비어있는지 등)
    - [x] 사용자 메시지 DB 저장 (`saveUserMessageToDB` 함수 활용)
    - [x] 해당 세션의 전체 대화 기록 조회 (`getChatHistoryFromDB` 함수 활용)
    - [x] 대화 기록과 새 메시지를 Vertex AI 형식으로 조합하여 전송 (`getAiResponse` 함수 활용)
    - [x] AI 응답 수신 및 DB 저장 (`saveAiMessageToDB` 함수 활용)
    - [x] 생성된 AI 응답을 클라이언트에 반환 (메시지 ID, 내용, 생성 시간 등)
- [x] **채팅 세션 삭제 API 구현 (`DELETE /api/chat/sessions/:session_id`)**
    - [x] 해당 세션 ID를 가진 `chat_sessions` 레코드 삭제
    - [x] 해당 세션 ID를 가진 모든 `chat_messages` 레코드 삭제 (CASCADE 설정 또는 별도 쿼리)
    - [x] (중요) 사용자 본인의 세션만 삭제 가능하도록 인가(Authorization) 확인 로직 필요 (모델에서 처리) // 사용자의 요청으로 인증/인가 최소화
- [x] **채팅 메시지 삭제 API 구현 (`DELETE /api/chat/messages/:message_id`)**
    - [x] 해당 메시지 ID를 가진 `chat_messages` 레코드 삭제
    - [x] (중요) 사용자 본인이 작성한 메시지만 삭제 가능하도록 인가 확인 로직 필요 (모델에서 처리) // 사용자의 요청으로 인증/인가 최소화
- [x] **메시지 리액션 제거 API 구현 (`DELETE /api/chat/messages/:message_id/reaction`)**
    - [x] 해당 메시지의 `reaction` 필드를 `NULL` 또는 기본값으로 업데이트

## 사용자 및 계정 관리
# 중요. API 인증은 생략하고 최소 기능 구현을 위해 로그인 기능\'만\' 제작합니다.
- [ ] **간편 회원가입 (OAuth) 구현** (예: Google, Kakao 등) // 사용자의 요청으로 생략
    - [ ] OAuth 라이브러리 설정 및 연동 (Passport.js 등)
    - [ ] OAuth 인증 후 사용자 정보 처리 및 DB 저장/연동 로직
    - [ ] 관련 API 엔드포인트 생성 (`/api/auth/google`, `/api/auth/google/callback` 등)
- [x] **사용자 프로필 기능 확장**
    - [x] 프로필 사진 업로드 API 구현 (`POST /api/users/:user_id/profile/image`) // 사용자의 요청으로 인증/인가 최소화
        - [x] 사용자 DB에 이미지 경로 또는 ID 저장
    - [x] 프로필 꾸미기 기능 구현 (테마, 뱃지 등) // 완료
        - [x] 프로필 정보 조회/수정 API 구현 (`GET /api/users/:user_id/profile`, `PUT /api/users/:user_id/profile`)
- [-] **계정 레벨 시스템 구현** // 진행 중
    - [x] `user_profiles` 테이블에 레벨, 경험치 필드 추가 및 `registerUser` 시 기본값 설정
    - [ ] 특정 활동(예: 메시지 전송, 기능 사용) 시 경험치 증가 로직 구현
    - [ ] 레벨업 조건 및 로직 구현
    - [ ] 레벨 정보 조회 API (기존 프로필 조회 API에 통합)
- [x] **회원 탈퇴 (계정 데이터 삭제) 기능 구현 (`DELETE /api/users/:user_id`)**
    - [x] 사용자 관련 모든 데이터 삭제 로직 (세션, 메시지, 설정, 프로필 등)

## 데이터 처리 및 AI 기능 확장
- [x] **파일 업로드 기능 구현 (채팅 메시지 첨부)**
    - [x] 파일 업로드 API 구현 (`POST /api/chat/sessions/:session_id/files` 등)
    - [x] `chat_messages` 테이블에 파일 정보(경로, 타입 등) 저장 필드 추가 또는 별도 테이블 관리
    - [x] 파일 다운로드/접근 권한 관리 // 사용자의 요청으로 인증/인가 최소화

## 백엔드 시스템 개선 및 기타
- [x] **사용자 인증 및 인가 강화** // 사용자의 요청으로 인증/인가 최소화 또는 제거됨
    - [x] JWT(JSON Web Token) 발급 및 검증 미들웨어 구현 (기본 구현 완료)
    - [x] 로그인 시 JWT 발급, 이후 API 요청 시 헤더에서 토큰 검증 (구현 완료)
    - [x] 각 API 엔드포인트에 필요한 역할/권한 기반 인가 로직 추가 (세션/메시지 삭제 인가 강화 완료)
- [ ] **API 엔드포인트 전반적인 오류 처리 개선**
    - [ ] 일관된 오류 응답 구조 정의 (예: `{ "error": { "code": "...", "message": "..." } }`)
    - [ ] 주요 오류 상황에 대한 상세 로깅 추가
- [ ] **모든 API 엔드포인트에 대한 상세 입력값 유효성 검사 추가**
    - [ ] 각 필드 타입, 길이, 필수 여부 등 상세 검증 규칙 적용
- [ ] **데이터베이스 커넥션 풀 관리 최적화**
    - [ ] 불필요한 커넥션 유지 방지
- [ ] **(선택) WebSocket을 이용한 실시간 메시지 전송 구현**
    - [ ] 클라이언트 연결 관리 및 메시지 브로드캐스팅 로직 구현